# 表要手动创建，不要自动生成
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect



# 名称要与db一致
spring.shardingsphere.datasource.names=db0,db1
spring.shardingsphere.datasource.db0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.db0.jdbc-url=jdbc:mysql://localhost:3306/db0?useUnicode=true&characterEncoding=utf-8
spring.shardingsphere.datasource.db0.username=root
spring.shardingsphere.datasource.db0.password=

spring.shardingsphere.datasource.db1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.bd1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.db1.jdbc-url=jdbc:mysql://localhost:3306/db1?useUnicode=true&characterEncoding=utf-8
spring.shardingsphere.datasource.db1.username=root
spring.shardingsphere.datasource.db1.password=

# 如果是SNOWFLAKE主键要为LONG类型
spring.shardingsphere.sharding.tables.user.key-generator.column=user_id
spring.shardingsphere.sharding.tables.user.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.item.key-generator.column=item_id
spring.shardingsphere.sharding.tables.item.key-generator.type=SNOWFLAKE

#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=db$->{user_id % 2}
#db$->{0..1}.user_$->{0..1} 无法满足当前情况
spring.shardingsphere.sharding.tables.user.actual-data-nodes=db0.user_0,db1.user_1
spring.shardingsphere.sharding.tables.item.actual-data-nodes=db0.item_0,db1.item_1


# 分库字段
spring.shardingsphere.sharding.tables.user.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.item.database-strategy.inline.sharding-column=item_id

# 分表字段
spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.item.table-strategy.inline.sharding-column=item_id

# 分表策略，要保证均匀否则会有某些表永远没有数据
spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=user_$->{user_id % 2}
spring.shardingsphere.sharding.tables.item.table-strategy.inline.algorithm-expression=item_$->{item_id % 2}

# 分库策略，要保证均匀否则会有某些表永远没有数据
spring.shardingsphere.sharding.tables.user.database-strategy.inline.algorithm-expression=db$->{ user_id % 2}
spring.shardingsphere.sharding.tables.item.database-strategy.inline.algorithm-expression=db$->{ item_id % 2}

# 打印log
spring.shardingsphere.props.sql.show=true